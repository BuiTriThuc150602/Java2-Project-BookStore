/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import dao.DAO_CTHoaDon;
import dao.DAO_HoaDon;
import dao.DAO_KhachHang;
import dao.DAO_NhanVien;
import dao.DAO_SanPham;
import entity.CTHoaDon;
import entity.HoaDon;
import entity.KhachHang;
import entity.NhanVien;
import entity.SanPham;

import javax.swing.GroupLayout.Alignment;
import javax.swing.DefaultListModel;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JList;
import java.awt.Font;
import javax.swing.border.EmptyBorder;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Trí Thức
 */
public class jpnHoaDon extends javax.swing.JPanel {
	private ArrayList<HoaDon> listHoaDon;
	private DAO_HoaDon dao_HoaDon = new DAO_HoaDon();

	/**
	 * Creates new form jpnHoaDon
	 */
	public jpnHoaDon() {
		initComponents();
		tblDSHoaDonModel = (DefaultTableModel) tblDSHoaDon.getModel();
		listHoaDon = new ArrayList<>();
		listHoaDon = splashScreen.arrListHoaDon;
		loadDataToTable(dao_HoaDon.getHoaDonTheoNgay(new Date()));
		tblDSHoaDon.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				try {
					selectRowTable(e);
				} catch (ParseException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});

		txtTimKiem.addKeyListener(new KeyAdapter() {
			@Override
			public void keyReleased(KeyEvent e) {
				if (!txtTimKiem.getText().trim().isEmpty()) {
					ArrayList<HoaDon> search = timKiem(txtTimKiem.getText().trim());
					tblDSHoaDonModel.getDataVector().removeAllElements();
					loadDataToTable(search);
				} else {
					tblDSHoaDonModel.getDataVector().removeAllElements();
					loadDataToTable(listHoaDon);
				}
			}
		});
		
		

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		pnDSSanPham = new javax.swing.JPanel();
		pnThongTinSanPham = new javax.swing.JPanel();
		lblMaHoaDon = new javax.swing.JLabel();
		lblTenKhachHang = new javax.swing.JLabel();
		lblNgayLap = new javax.swing.JLabel();
		lblTenNhanVien = new javax.swing.JLabel();
		lblGiamGia = new javax.swing.JLabel();
		lblTongTien = new javax.swing.JLabel();
		txtTimKiem = new javax.swing.JTextField();
		txtMaHoaDon = new javax.swing.JTextField();
		txtNgayLap = new com.toedter.calendar.JDateChooser();
		txtGiamGia = new javax.swing.JTextField();
		txtTenKhachHang = new javax.swing.JTextField();
		txtTenNhanVien = new javax.swing.JTextField();
		txtTongTien = new javax.swing.JTextField();
		jLabel4 = new javax.swing.JLabel();
		lblTimKiem = new javax.swing.JLabel();
		pnChucNang = new javax.swing.JPanel();
		btnInHoaDon = new javax.swing.JButton();
		btnXoa = new javax.swing.JButton();
		pnTable = new javax.swing.JPanel();
		scrTableDSSP = new javax.swing.JScrollPane();
		tblDSHoaDon = new javax.swing.JTable();
		jListDSSPMua = new JList<>();

		setPreferredSize(new java.awt.Dimension(993, 741));

		pnDSSanPham.setBorder(javax.swing.BorderFactory.createTitledBorder("DS Sản Phẩm"));
		pnDSSanPham.setPreferredSize(new java.awt.Dimension(262, 262));
		pnDSSanPham.setBackground(new Color(255, 255, 204));
		pnThongTinSanPham.setBackground(new Color(255, 255, 204));
		pnChucNang.setBackground(new Color(255, 255, 204));
		pnTable.setBackground(new Color(255, 255, 204));
		jListDSSPMua.setBackground(new Color(255, 255, 204));

		pnThongTinSanPham.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông Tin Sản Phẩm"));

		lblMaHoaDon.setText("Mã Hóa Đơn");

		lblTenKhachHang.setText("Tên Khách Hàng");

		lblNgayLap.setText("Ngày Lập");

		lblTenNhanVien.setText("Tên Nhân Viên");

		lblGiamGia.setText("Giảm Giá");

		lblTongTien.setText("Tổng Tiền");

		lblTimKiem.setIcon(new javax.swing.ImageIcon("img//search_icon.png")); // NOI18N

		javax.swing.GroupLayout pnThongTinSanPhamLayout = new javax.swing.GroupLayout(pnThongTinSanPham);
		pnThongTinSanPhamLayout.setHorizontalGroup(pnThongTinSanPhamLayout.createParallelGroup(Alignment.LEADING)
				.addGroup(pnThongTinSanPhamLayout.createSequentialGroup().addGap(21).addGroup(pnThongTinSanPhamLayout
						.createParallelGroup(Alignment.TRAILING)
						.addGroup(pnThongTinSanPhamLayout.createSequentialGroup()
								.addGroup(pnThongTinSanPhamLayout.createParallelGroup(Alignment.LEADING)
										.addComponent(lblMaHoaDon).addComponent(lblNgayLap).addComponent(lblGiamGia))
								.addGap(29))
						.addGroup(pnThongTinSanPhamLayout.createSequentialGroup().addComponent(lblTimKiem)
								.addPreferredGap(ComponentPlacement.UNRELATED).addComponent(jLabel4)
								.addPreferredGap(ComponentPlacement.RELATED)))
						.addGroup(
								pnThongTinSanPhamLayout.createParallelGroup(Alignment.LEADING)
										.addGroup(pnThongTinSanPhamLayout.createSequentialGroup()
												.addComponent(txtTimKiem, GroupLayout.DEFAULT_SIZE, 597,
														Short.MAX_VALUE)
												.addGap(10))
										.addGroup(pnThongTinSanPhamLayout.createSequentialGroup()
												.addGroup(pnThongTinSanPhamLayout.createParallelGroup(Alignment.LEADING)
														.addComponent(txtMaHoaDon, 188, 188, Short.MAX_VALUE)
														.addComponent(txtGiamGia, GroupLayout.DEFAULT_SIZE, 188,
																Short.MAX_VALUE)
														.addComponent(txtNgayLap, GroupLayout.DEFAULT_SIZE, 188,
																Short.MAX_VALUE))
												.addGap(37)
												.addGroup(pnThongTinSanPhamLayout.createParallelGroup(Alignment.LEADING)
														.addComponent(lblTenKhachHang).addComponent(lblTenNhanVien)
														.addComponent(lblTongTien))
												.addGap(38)
												.addGroup(pnThongTinSanPhamLayout.createParallelGroup(Alignment.LEADING)
														.addGroup(pnThongTinSanPhamLayout.createSequentialGroup()
																.addComponent(txtTenKhachHang, GroupLayout.DEFAULT_SIZE,
																		260, Short.MAX_VALUE)
																.addGap(4))
														.addComponent(txtTenNhanVien, GroupLayout.DEFAULT_SIZE, 260,
																Short.MAX_VALUE)
														.addComponent(txtTongTien, GroupLayout.DEFAULT_SIZE, 260,
																Short.MAX_VALUE))))
						.addGap(0)));
		pnThongTinSanPhamLayout
				.setVerticalGroup(
						pnThongTinSanPhamLayout.createParallelGroup(Alignment.LEADING)
								.addGroup(pnThongTinSanPhamLayout.createSequentialGroup().addGap(20)
										.addGroup(pnThongTinSanPhamLayout.createParallelGroup(Alignment.BASELINE)
												.addComponent(lblMaHoaDon).addComponent(lblTenKhachHang)
												.addComponent(txtMaHoaDon, GroupLayout.PREFERRED_SIZE,
														GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
												.addComponent(txtTenKhachHang, GroupLayout.PREFERRED_SIZE,
														GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
										.addGap(35)
										.addGroup(pnThongTinSanPhamLayout.createParallelGroup(Alignment.BASELINE)
												.addComponent(lblNgayLap).addComponent(lblTenNhanVien)
												.addComponent(txtNgayLap, GroupLayout.PREFERRED_SIZE,
														GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
												.addComponent(txtTenNhanVien, GroupLayout.PREFERRED_SIZE,
														GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
										.addGap(39)
										.addGroup(pnThongTinSanPhamLayout.createParallelGroup(Alignment.BASELINE)
												.addComponent(lblGiamGia).addComponent(lblTongTien)
												.addComponent(
														txtGiamGia, GroupLayout.PREFERRED_SIZE,
														GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
												.addComponent(
														txtTongTien, GroupLayout.PREFERRED_SIZE,
														GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
										.addGroup(pnThongTinSanPhamLayout.createParallelGroup(Alignment.LEADING)
												.addGroup(pnThongTinSanPhamLayout.createSequentialGroup()
														.addPreferredGap(ComponentPlacement.RELATED, 18,
																Short.MAX_VALUE)
														.addGroup(pnThongTinSanPhamLayout
																.createParallelGroup(Alignment.BASELINE)
																.addComponent(jLabel4).addComponent(lblTimKiem))
														.addGap(21))
												.addGroup(pnThongTinSanPhamLayout.createSequentialGroup()
														.addPreferredGap(ComponentPlacement.UNRELATED)
														.addComponent(txtTimKiem, GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
														.addContainerGap()))));
		pnThongTinSanPham.setLayout(pnThongTinSanPhamLayout);

		pnChucNang.setPreferredSize(new java.awt.Dimension(900, 69));

		btnInHoaDon.setBackground(new java.awt.Color(76, 175, 80));
		btnInHoaDon.setText("In Hóa Đơn");
		btnInHoaDon.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				inHoaDon();
			}
		});

		btnXoa.setBackground(new java.awt.Color(76, 175, 80));
		btnXoa.setText("Xóa");
		btnXoa.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					btnXoaActionPerformed(evt);
				} catch (HeadlessException | IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});

		cboLoc = new JComboBox<String>();
		cboLoc.setModel(new DefaultComboBoxModel<String>(new String[] { "Hôm Nay", "Tháng Này", "Tất Cả" }));
		cboLoc.setFont(new Font("Times New Roman", Font.BOLD, 14));
		cboLoc.setBackground(new Color(0, 153, 51));
		cboLoc.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				locHoaDon();

			}
		});

		javax.swing.GroupLayout gl_pnChucNang = new javax.swing.GroupLayout(pnChucNang);
		gl_pnChucNang.setHorizontalGroup(gl_pnChucNang.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_pnChucNang.createSequentialGroup().addContainerGap()
						.addComponent(cboLoc, 0, 232, Short.MAX_VALUE).addGap(250)
						.addComponent(btnXoa, GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE).addGap(27)
						.addComponent(btnInHoaDon, GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE).addGap(22)));
		gl_pnChucNang.setVerticalGroup(gl_pnChucNang.createParallelGroup(Alignment.TRAILING).addGroup(gl_pnChucNang
				.createSequentialGroup().addContainerGap()
				.addGroup(gl_pnChucNang.createParallelGroup(Alignment.LEADING)
						.addComponent(cboLoc, GroupLayout.PREFERRED_SIZE, 49, GroupLayout.PREFERRED_SIZE)
						.addGroup(gl_pnChucNang.createParallelGroup(Alignment.BASELINE)
								.addComponent(btnXoa, GroupLayout.PREFERRED_SIZE, 48, GroupLayout.PREFERRED_SIZE)
								.addComponent(btnInHoaDon, GroupLayout.PREFERRED_SIZE, 48, GroupLayout.PREFERRED_SIZE)))
				.addContainerGap()));
		pnChucNang.setLayout(gl_pnChucNang);

		tblDSHoaDon.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {},
				new String[] { "Mã Hóa Đơn", "Ngày Lập", "Tên Khách Hàng", "Tên Nhân Viên", "Giảm Giá", "Tổng Tiền" }));
		scrTableDSSP.setViewportView(tblDSHoaDon);

		javax.swing.GroupLayout gl_pnTable = new javax.swing.GroupLayout(pnTable);
		pnTable.setLayout(gl_pnTable);
		gl_pnTable.setHorizontalGroup(
				gl_pnTable.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(scrTableDSSP));
		gl_pnTable.setVerticalGroup(gl_pnTable.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(gl_pnTable.createSequentialGroup().addContainerGap()
						.addComponent(scrTableDSSP, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		layout.setHorizontalGroup(layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addComponent(pnDSSanPham, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(ComponentPlacement.RELATED)
						.addComponent(pnThongTinSanPham, GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE))
				.addComponent(pnChucNang, GroupLayout.DEFAULT_SIZE, 993, Short.MAX_VALUE)
				.addComponent(pnTable, GroupLayout.DEFAULT_SIZE, 993, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup()
				.addContainerGap()
				.addGroup(layout.createParallelGroup(Alignment.TRAILING)
						.addComponent(pnDSSanPham, GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE).addComponent(
								pnThongTinSanPham, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				.addPreferredGap(ComponentPlacement.RELATED)
				.addComponent(pnTable, GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
				.addPreferredGap(ComponentPlacement.RELATED).addComponent(pnChucNang, GroupLayout.PREFERRED_SIZE,
						GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)));

		jListDSSPMua = new JList<String>();
		jListDSSPMua.setBorder(new EmptyBorder(0, 0, 0, 0));
		jListDSSPMua.setFont(new Font("Times New Roman", Font.PLAIN, 14));
		pnDSSanPham.add(jListDSSPMua);
		this.setLayout(layout);
	}// </editor-fold>//GEN-END:initComponents

	private void loadDataToTable(ArrayList<HoaDon> listHD) {
		tblDSHoaDonModel.getDataVector().removeAllElements();
		for (HoaDon hoaDon : listHD) {
			KhachHang kh = hoaDon.getKhachHang();
			NhanVien nv = hoaDon.getNhanVien();
			String tenKH = "";
			String tenNV = "";
			if (kh != null)
				tenKH = kh.getHoTen().trim();
			if (nv != null)
				tenNV = nv.getHoTen().trim();
			Object[] row = { hoaDon.getMaHoaDon().trim(), hoaDon.getNgayLap(), tenKH, tenNV, hoaDon.getGiamGia(),
					hoaDon.getTongTien() };
			tblDSHoaDonModel.addRow(row);
		}
		tblDSHoaDon.updateUI();
	}

	public void inHoaDon() {
		int selRow = tblDSHoaDon.getSelectedRow();
		if (selRow < 0)
			JOptionPane.showMessageDialog(getRootPane().getParent(), "Chọn Hóa Đơn Cần In ");
		else {
			HoaDon hd = dao_HoaDon.getHoaDonTheoMa(tblDSHoaDon.getValueAt(selRow, 0).toString());
			new frmXuatHoaDon(hd).setVisible(true);
		}
	}

	private ArrayList<HoaDon> timKiem(String key) {
		ArrayList<HoaDon> dsKetQua = new ArrayList<>();
		for (HoaDon hoaDon : listHoaDon) {
			KhachHang kh = hoaDon.getKhachHang();
			if (kh != null) {
				if (hoaDon.getMaHoaDon().trim().contains(key) || kh.getHoTen().trim().contains(key)) {
					dsKetQua.add(hoaDon);
				}
			}
		}
		return dsKetQua;
	}

	private void clearform() {
		txtGiamGia.setText("");
		txtMaHoaDon.setText("");
		txtNgayLap.setCalendar(null);
		txtTenKhachHang.setText("");
		txtTenNhanVien.setText("");
		txtTongTien.setText("");
		jListDSSPMua.removeAll();
	}

	private void loadListSPMua(String maHD) {
		ArrayList<CTHoaDon> dsCTHD = dao_CTHoaDon.getCTHoaDonTheoMaHoaDon(maHD);
		DefaultListModel<String> listModelDSSPMua = new DefaultListModel<>();
		for (CTHoaDon ctHoaDon : dsCTHD) {
			listModelDSSPMua.addElement(ctHoaDon.getSanPham().getTenSanPham().trim());

		}
		jListDSSPMua.removeAll();
		jListDSSPMua.setModel(listModelDSSPMua);

	}

	private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) throws HeadlessException, IOException {// GEN-FIRST:event_btnXoaActionPerformed
		// TODO add your handling code here:
		if (btnXoa.getText().equalsIgnoreCase("Xóa")) {
			if (tblDSHoaDon.getSelectedRow() < 0) {
				JOptionPane.showMessageDialog(this, "Chọn Hóa Đơn Cần Xóa !");
			} else {
				int n = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa không?", "Xóa",
						JOptionPane.YES_NO_OPTION);
				if (n == JOptionPane.YES_OPTION) {
					if (xoaHoaDon()) {
						JOptionPane.showMessageDialog(this, "Xoá thành công");
					} else
						JOptionPane.showMessageDialog(this, "Xóa thất bại");
				}
			}
		} else {
			clearform();
			btnInHoaDon.setText("Thêm hóa đơn");
			btnXoa.setText("Xóa");
		}
	}// GEN-LAST:event_btnXoaActionPerformed

	private boolean xoaHoaDon() throws IOException {
		String ma = tblDSHoaDon.getModel().getValueAt(tblDSHoaDon.getSelectedRow(), 0).toString();
		if (dao_HoaDon.xoaHoaDon(ma)) {
			tblDSHoaDonModel.getDataVector().removeAllElements();
			loadDataToTable(listHoaDon);
			return true;
		}
		return false;
	}

	private void selectRowTable(MouseEvent e) throws ParseException {
		int index = tblDSHoaDon.getSelectedRow();
		txtMaHoaDon.setText(tblDSHoaDon.getValueAt(index, 0).toString());
		java.util.Date ngayLap = new SimpleDateFormat("yyyy-MM-dd").parse(tblDSHoaDon.getValueAt(index, 1).toString());
		txtNgayLap.setDate(ngayLap);
		txtTenKhachHang.setText(tblDSHoaDon.getValueAt(index, 2).toString());
		txtTenNhanVien.setText(tblDSHoaDon.getValueAt(index, 3).toString());
		txtGiamGia.setText(tblDSHoaDon.getValueAt(index, 4).toString());
		txtTongTien.setText(tblDSHoaDon.getValueAt(index, 5).toString());
		loadListSPMua(txtMaHoaDon.getText().trim());

	}

	private void locHoaDon() {
		String loai = cboLoc.getSelectedItem().toString();
		ArrayList<HoaDon> dsLocHD;
		if (loai.equalsIgnoreCase("Hôm Nay")) {
			dsLocHD = dao_HoaDon.getHoaDonTheoNgay(new Date());
			loadDataToTable(dsLocHD);

		} else if (loai.equalsIgnoreCase("Tháng Này")) {
			dsLocHD = dao_HoaDon.getHoaDonTheoThang(new Date());
			loadDataToTable(dsLocHD);
		} else
			loadDataToTable(listHoaDon);
	}

	public JButton getBtnBack() {
		return btnBack;
	}

	public JTable getTblDSHoaDon() {
		return tblDSHoaDon;
	}

	private javax.swing.JButton btnInHoaDon;
	private javax.swing.JButton btnXoa;
	private javax.swing.JButton btnBack;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel lblTimKiem;
	private javax.swing.JPanel pnChucNang;
	private javax.swing.JPanel pnTable;
	private javax.swing.JScrollPane scrTableDSSP;
	private javax.swing.JTextField txtTimKiem;
	private javax.swing.JLabel lblGiamGia;
	private javax.swing.JLabel lblMaHoaDon;
	private javax.swing.JLabel lblNgayLap;
	private javax.swing.JLabel lblTenKhachHang;
	private javax.swing.JLabel lblTenNhanVien;
	private javax.swing.JLabel lblTongTien;
	private javax.swing.JPanel pnDSSanPham;
	private javax.swing.JPanel pnThongTinSanPham;
	private javax.swing.JTable tblDSHoaDon;
	private javax.swing.JTextField txtGiamGia;
	private javax.swing.JTextField txtMaHoaDon;
	private com.toedter.calendar.JDateChooser txtNgayLap;
	private javax.swing.JTextField txtTenKhachHang;
	private javax.swing.JTextField txtTenNhanVien;
	private javax.swing.JTextField txtTongTien;
	private JComboBox<String> cboLoc;
	private DefaultTableModel tblDSHoaDonModel;
	private JList<String> jListDSSPMua;
	private DAO_CTHoaDon dao_CTHoaDon = new DAO_CTHoaDon();
	private DAO_SanPham dao_SanPham = new DAO_SanPham();
}
