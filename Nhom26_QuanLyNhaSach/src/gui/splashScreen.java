/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.awt.Image;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.ImageIcon;

import dao.DAO_CTHoaDon;
import dao.DAO_HoaDon;
import dao.DAO_KhachHang;
import dao.DAO_NhanVien;
import dao.DAO_SanPham;
import entity.CTHoaDon;
import entity.HoaDon;
import entity.KhachHang;
import entity.NhanVien;
import entity.SanPham;
import imageHepler.ImageIOHelper;

/**
 *
 * @author Trí Thức
 */
public class splashScreen extends javax.swing.JFrame {

	/**
	 * Creates new form splashScreen2
	 */
	public splashScreen() {
		initComponents();
		setTitle("Nhà Sách Tri Thức");
		setLocationRelativeTo(null);
		setResizable(false);
		loadProgress();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		pnParent = new javax.swing.JPanel();
		lblBackground = new javax.swing.JLabel();
		pgrLoading = new javax.swing.JProgressBar();
		lblLoading = new javax.swing.JLabel();
		lblThongTin = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		pnParent.setBackground(new java.awt.Color(255, 255, 204));

		lblBackground.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		lblBackground.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		ImageIcon ico = new ImageIcon("img//background.png");
		Image img = ico.getImage();
		Image backg = ImageIOHelper.resize(img, 900, 400);
		lblBackground.setIcon(new ImageIcon(backg));

		pgrLoading.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

		lblLoading.setBackground(new java.awt.Color(255, 255, 204));
		lblLoading.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
		lblLoading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		lblLoading.setText("Loading 99%");

		lblThongTin.setBackground(new java.awt.Color(255, 255, 204));
		lblThongTin.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		lblThongTin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		lblThongTin.setText("Nhà Sách Tri Thức - " + LocalDate.now().toString());

		javax.swing.GroupLayout pnParentLayout = new javax.swing.GroupLayout(pnParent);
		pnParent.setLayout(pnParentLayout);
		pnParentLayout.setHorizontalGroup(pnParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(lblBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
						Short.MAX_VALUE)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnParentLayout.createSequentialGroup()
						.addContainerGap()
						.addGroup(pnParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(lblThongTin, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(lblLoading, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(pgrLoading, javax.swing.GroupLayout.DEFAULT_SIZE, 895, Short.MAX_VALUE))
						.addContainerGap()));
		pnParentLayout.setVerticalGroup(pnParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnParentLayout.createSequentialGroup()
						.addComponent(lblBackground, javax.swing.GroupLayout.PREFERRED_SIZE, 401,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(pgrLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 39,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(lblLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(lblThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				pnParent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				pnParent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */

	private void loadProgress() {
		new Thread() {
			@Override
			public void run() {
				for (int i = 0; i <= 100; i++) {
					pgrLoading.setValue(i);
					lblLoading.setText("Loading " + i + "%");
					try {
						sleep(25);
					} catch (InterruptedException e) {

						e.printStackTrace();
					}

					if (i == 100) {
						closeWhenDone();
					}
				}
			}
		}.start();
	}

	private void closeWhenDone() {
		new frmLogin().setVisible(true);
		this.dispose();
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel lblBackground;
	private javax.swing.JLabel lblLoading;
	private javax.swing.JLabel lblThongTin;
	private javax.swing.JProgressBar pgrLoading;
	private javax.swing.JPanel pnParent;
	// End of variables declaration//GEN-END:variables
	public static DAO_SanPham dao_SanPham = new DAO_SanPham();
	public static DAO_HoaDon dao_HoaDon = new DAO_HoaDon();
	public static DAO_CTHoaDon dao_CTHoaDon = new DAO_CTHoaDon();
	public static DAO_NhanVien dao_NhanVien = new DAO_NhanVien();
	public static DAO_KhachHang dao_KhachHang = new DAO_KhachHang();
	
	public static ArrayList<SanPham> arrListSanPham = dao_SanPham.getALLSanPham();
	public static ArrayList<HoaDon> arrListHoaDon = dao_HoaDon.getAllHoaDon();	
	public static ArrayList<NhanVien> arrListNhanVien = dao_NhanVien.getAllNhanVien();
	public static ArrayList<KhachHang> arrListKhachHang = dao_KhachHang.getAllKhachHang();
}
