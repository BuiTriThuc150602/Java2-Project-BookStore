/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import java.awt.Color;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Locale;
import java.time.LocalDate;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

import dao.DAO_Loai;
import dao.DAO_NhaCungCap;
import dao.DAO_NhaXuatBan;
import dao.DAO_SanPham;
import dao.DAO_TacGia;
import dao.DAO_TheLoai;
import entity.Loai;
import entity.NhaCungCap;
import entity.NhaXuatBan;
import entity.SanPham;
import entity.TacGia;
import entity.TheLoai;
import imageHepler.ImageIOHelper;
import javax.swing.JLabel;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.SwingConstants;

/**
 *
 * @author huynh
 */
public class jpnSanPham extends javax.swing.JPanel {

	private List<SanPham> listSanPham;
	private dao.DAO_SanPham dao_SanPham = new DAO_SanPham();
	private dao.DAO_NhaXuatBan dao_NhaXuatBan = new DAO_NhaXuatBan();
	private dao.DAO_NhaCungCap dao_NhaCungCap = new DAO_NhaCungCap();
	private dao.DAO_Loai dao_Loai = new DAO_Loai();
	private dao.DAO_TheLoai dao_TheLoai = new DAO_TheLoai();
	private dao.DAO_TacGia dao_TacGia = new DAO_TacGia();
	private byte[] hinhAnhSP;

	/**
	 * Creates new form jpnSanPham
	 */
	public jpnSanPham() {
		initComponents();
		tblDSSanPhamModel = (DefaultTableModel) tblDSSanPham.getModel();
		loadDataToTable();
		loadLoaiSanPham();
		loadTheLoaiSach();
		tblDSSanPham.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				selectRowTable(e);
			}
		});
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		pnAnh = new javax.swing.JPanel();
		pnThongTinSanPham = new javax.swing.JPanel();

		lblKichThuoc = new javax.swing.JLabel();
		lblSoTrang = new javax.swing.JLabel();
		lblNgayXuatBan = new javax.swing.JLabel();
		lblLoaiBia = new javax.swing.JLabel();
		lblTacGia = new javax.swing.JLabel();
		lblNhaXuatBan = new javax.swing.JLabel();
		lblDonViTinh = new javax.swing.JLabel();

		lblMaSanPham = new javax.swing.JLabel();
		lblTenSanPham = new javax.swing.JLabel();
		lblXuatXu = new javax.swing.JLabel();
		lblChatLieu = new javax.swing.JLabel();
		lblLoai = new javax.swing.JLabel();
		lblThuongHieu = new javax.swing.JLabel();
		lblNhaCungCap = new javax.swing.JLabel();
		lblSoLuong = new javax.swing.JLabel();
		lblDonGia = new javax.swing.JLabel();

		cboLoai = new javax.swing.JComboBox<>();

		cboSapXep = new javax.swing.JComboBox<>();
		cboLoaiBia = new javax.swing.JComboBox<>();
		cboTheLoai = new javax.swing.JComboBox<>();

		txtNgayXuatBan = new com.toedter.calendar.JDateChooser();
		txtKichThuoc = new javax.swing.JTextField();
		txtSoTrang = new javax.swing.JTextField();
		txtTacGia = new javax.swing.JTextField();
		txtNhaXuatBan = new javax.swing.JTextField();
		txtDonViTinh = new javax.swing.JTextField();

		txtMaSanPham = new javax.swing.JTextField();
		txtTenSanPham = new javax.swing.JTextField();
		txtXuatXu = new javax.swing.JTextField();
		txtChatLieu = new javax.swing.JTextField();
		txtThuongHieu = new javax.swing.JTextField();
		txtNhaCungCap = new javax.swing.JTextField();
		txtDonGia = new javax.swing.JTextField();
		txtSoLuong = new javax.swing.JTextField();
		pnDSSanPham = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		tblDSSanPham = new javax.swing.JTable();
		pnChucNang = new javax.swing.JPanel();
		btnThemSanPham = new javax.swing.JButton();
		btnCapNhat = new javax.swing.JButton();
		btnXoa = new javax.swing.JButton();

		pnAnh.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ảnh",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Times New Roman", 1, 18))); // NOI18N
		pnAnh.setBackground(new Color(255, 255, 204));
		pnAnh.setPreferredSize(new java.awt.Dimension(261, 261));

		lblHinhAnh = new JLabel();
		lblHinhAnh.setHorizontalAlignment(SwingConstants.CENTER);

		javax.swing.GroupLayout pnAnhLayout = new javax.swing.GroupLayout(pnAnh);
		pnAnhLayout.setHorizontalGroup(pnAnhLayout.createParallelGroup(Alignment.LEADING)
				.addGroup(pnAnhLayout.createSequentialGroup()
						.addComponent(lblHinhAnh, GroupLayout.PREFERRED_SIZE, 249, GroupLayout.PREFERRED_SIZE)
						.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		pnAnhLayout.setVerticalGroup(
				pnAnhLayout.createParallelGroup(Alignment.LEADING).addGroup(pnAnhLayout.createSequentialGroup()
						.addComponent(lblHinhAnh, GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE).addContainerGap()));
		pnAnh.setLayout(pnAnhLayout);

		pnThongTinSanPham.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông Tin Sản Phẩm",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Times New Roman", 1, 18))); // NOI18N
		pnThongTinSanPham.setBackground(new Color(255, 255, 204));

		lblMaSanPham.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		lblMaSanPham.setText("Mã Sản Phẩm");

		lblTenSanPham.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		lblTenSanPham.setText("Tên Sản Phẩm");

		lblXuatXu.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		lblXuatXu.setText("Xuất Xứ");

		lblChatLieu.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		lblChatLieu.setText("Chất Liệu");

		lblLoai.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		lblLoai.setText("Loại");

		lblThuongHieu.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		lblThuongHieu.setText("Thương Hiệu");

		lblNhaCungCap.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		lblNhaCungCap.setText("Nhà Cung Cấp");

		lblSoLuong.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		lblSoLuong.setText("Số Lượng");

		cboLoai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

		lblDonGia.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		lblDonGia.setText("Đơn Giá");

		javax.swing.GroupLayout pnThongTinSanPhamLayout = new javax.swing.GroupLayout(pnThongTinSanPham);
		pnThongTinSanPham.setLayout(pnThongTinSanPhamLayout);
		pnThongTinSanPhamLayout.setHorizontalGroup(pnThongTinSanPhamLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnThongTinSanPhamLayout.createSequentialGroup().addGap(22, 22, 22).addGroup(
						pnThongTinSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
								pnThongTinSanPhamLayout.createSequentialGroup().addGroup(pnThongTinSanPhamLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(lblTenSanPham).addComponent(lblXuatXu).addComponent(lblChatLieu))
										.addGap(24, 24, 24)
										.addGroup(pnThongTinSanPhamLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(txtXuatXu, javax.swing.GroupLayout.DEFAULT_SIZE, 273,
														Short.MAX_VALUE)
												.addComponent(txtTenSanPham).addComponent(txtChatLieu)))
								.addGroup(pnThongTinSanPhamLayout.createSequentialGroup().addComponent(lblMaSanPham)
										.addGap(26, 26, 26).addComponent(txtMaSanPham)))
						.addGap(30, 30, 30)
						.addGroup(pnThongTinSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(lblNhaCungCap).addComponent(lblSoLuong)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnThongTinSanPhamLayout
										.createSequentialGroup()
										.addGroup(pnThongTinSanPhamLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(lblLoai).addComponent(lblThuongHieu))
										.addGap(11, 11, 11)))
						.addGap(9, 9, 9)
						.addGroup(pnThongTinSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(cboLoai, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										pnThongTinSanPhamLayout.createSequentialGroup()
												.addComponent(txtSoLuong, javax.swing.GroupLayout.DEFAULT_SIZE, 84,
														Short.MAX_VALUE)
												.addGap(18, 18, 18).addComponent(lblDonGia).addGap(37, 37, 37)
												.addComponent(txtDonGia, javax.swing.GroupLayout.DEFAULT_SIZE, 87,
														Short.MAX_VALUE))
								.addComponent(txtNhaCungCap).addComponent(txtThuongHieu))
						.addGap(76, 76, 76)));

		pnThongTinSanPhamLayout.setVerticalGroup(pnThongTinSanPhamLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnThongTinSanPhamLayout.createSequentialGroup().addGap(12, 12, 12)
						.addGroup(pnThongTinSanPhamLayout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(lblMaSanPham).addComponent(lblLoai)
								.addComponent(cboLoai, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(27, 27, 27)
						.addGroup(pnThongTinSanPhamLayout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(lblThuongHieu).addComponent(lblTenSanPham)
								.addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(txtThuongHieu, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(28, 28, 28)
						.addGroup(pnThongTinSanPhamLayout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(lblNhaCungCap).addComponent(lblXuatXu)
								.addComponent(txtXuatXu, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(txtNhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(22, 22, 22)
						.addGroup(pnThongTinSanPhamLayout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(lblChatLieu).addComponent(lblSoLuong)
								.addComponent(txtChatLieu, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lblDonGia).addComponent(txtSoLuong,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		tblDSSanPham.setModel(
				new javax.swing.table.DefaultTableModel(new Object[][] {}, new String[] { "Mã Sản Phẩm", "Tên Sản Phẩm",
						"Xuất Xứ", "Chất Liệu", "Loại", "Thương Hiệu", "Nhà Cung Cấp", "Số Lượng", "Đơn Giá" }));
		jScrollPane1.setViewportView(tblDSSanPham);

		javax.swing.GroupLayout pnDSSanPhamLayout = new javax.swing.GroupLayout(pnDSSanPham);
		pnDSSanPham.setLayout(pnDSSanPhamLayout);
		pnChucNang.setBackground(new Color(255, 255, 204));
		pnDSSanPham.setBackground(new Color(255, 255, 204));
		pnDSSanPhamLayout.setHorizontalGroup(pnDSSanPhamLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1));
		pnDSSanPhamLayout
				.setVerticalGroup(pnDSSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(pnDSSanPhamLayout.createSequentialGroup()
								.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(0, 0, Short.MAX_VALUE)));

		pnChucNang.setPreferredSize(new java.awt.Dimension(10, 69));

		btnThemSanPham.setBackground(new java.awt.Color(76, 175, 80));
		btnThemSanPham.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
		btnThemSanPham.setForeground(new java.awt.Color(255, 255, 255));
		btnThemSanPham.setText("Thêm Sản Phẩm");
		btnThemSanPham.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnThemSanPhamActionPerformed(evt);
			}
		});

		btnCapNhat.setBackground(new java.awt.Color(76, 175, 80));
		btnCapNhat.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
		btnCapNhat.setForeground(new java.awt.Color(255, 255, 255));
		btnCapNhat.setText("Cập Nhật");
		btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnCapNhatActionPerformed(evt);
			}
		});

		btnXoa.setBackground(new java.awt.Color(76, 175, 80));
		btnXoa.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
		btnXoa.setForeground(new java.awt.Color(255, 255, 255));
		btnXoa.setText("Xóa");
		btnXoa.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnXoaActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout pnChucNangLayout = new javax.swing.GroupLayout(pnChucNang);
		pnChucNang.setLayout(pnChucNangLayout);
		pnChucNangLayout
				.setHorizontalGroup(
						pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(pnChucNangLayout.createSequentialGroup().addGap(53, 53, 53)
										.addComponent(btnThemSanPham, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addGap(176, 176, 176)
										.addComponent(btnCapNhat, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addGap(199, 199, 199)
										.addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addGap(41, 41, 41)));
		pnChucNangLayout.setVerticalGroup(pnChucNangLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnChucNangLayout.createSequentialGroup().addContainerGap()
						.addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 44,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 44,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btnThemSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 44,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap(19, Short.MAX_VALUE)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addComponent(pnAnh, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(pnThongTinSanPham, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				.addComponent(pnDSSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
						Short.MAX_VALUE)
				.addComponent(pnChucNang, javax.swing.GroupLayout.DEFAULT_SIZE, 1173, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
						.addComponent(pnAnh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE)
						.addComponent(pnThongTinSanPham, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
				.addComponent(pnDSSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.PREFERRED_SIZE)
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
						javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addComponent(pnChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.PREFERRED_SIZE)));
	}// </editor-fold>

	private void loadDataToTable() {
		listSanPham = new ArrayList<>();
		listSanPham = dao_SanPham.getALLSanPham();
		for (SanPham sanPham : listSanPham) {
			NhaCungCap ncc = sanPham.getNhaCungCap();
			NhaXuatBan nxb = sanPham.getNhaXuatBan();
			String tenNXB = "";
			String tenNCC = "";
			if (ncc != null)
				tenNCC = ncc.getTenNhaCungCap();
			if (nxb != null)
				tenNXB = nxb.getTenNhaXuatBan();
			Object[] row = { sanPham.getMaSanPham().trim(), sanPham.getTenSanPham().trim(),
					(sanPham.getXuatXu() == null ? "" : sanPham.getXuatXu()),
					(sanPham.getChatLieu() == null ? "" : sanPham.getChatLieu()), sanPham.getLoai().getTenLoai().trim(),
					sanPham.getThuongHieu() == null ? "" : sanPham.getThuongHieu(), tenNCC.trim(), sanPham.getSoLuong(),
					sanPham.getDonGia() };
			tblDSSanPhamModel.addRow(row);
		}
		tblDSSanPham.updateUI();
	}

	private void btnThemSanPhamActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		if (btnThemSanPham.getText().equalsIgnoreCase("Thêm sản phẩm")) {
			clearForm();
			btnCapNhat.setText("Chọn ảnh");
			btnThemSanPham.setText("Lưu sản phẩm");
			btnXoa.setText("Hủy");
			phatSinhMa();
		} else {
			if (themSanPham()) {
				clearForm();
				JOptionPane.showMessageDialog(this, "Thêm thành công");
				btnCapNhat.setText("Chọn ảnh");
				btnThemSanPham.setText("Lưu sản phẩm");
				btnXoa.setText("Hủy");
			} else
				JOptionPane.showMessageDialog(this, "Thêm thất bại");
		}
	}

	private boolean themSanPham() {
		SanPham sp = revertSanPham();
		if (dao_SanPham.themSanPham(sp)) {
			tblDSSanPhamModel.getDataVector().removeAllElements();
			loadDataToTable();
			return true;
		}
		return false;
	}

	private void phatSinhMa() {
		ArrayList<SanPham> list = dao_SanPham.getALLSanPham();
		String mspCuoiCung = list.get(list.size() - 1).getMaSanPham();
		String[] slSP = mspCuoiCung.split("P", 2);
		int sl = Integer.parseInt(slSP[1].toString().trim()) + 1;
		String maSP = "SP";
		if (sl < 10)
			maSP += "00" + sl;
		else if (sl < 100)
			maSP += "0" + sl;
		else
			maSP += "" + sl;
		txtMaSanPham.setText(maSP);
	}

	private void clearForm() {
		// TODO Auto-generated method stub
		txtChatLieu.setText("");
		txtDonGia.setText("");
		txtMaSanPham.setText("");
		txtNhaCungCap.setText("");
		txtSoLuong.setText("");
		txtTenSanPham.setText("");
		txtThuongHieu.setText("");
		txtXuatXu.setText("");
	}

	private SanPham revertSanPham() {
		String maSP = txtMaSanPham.getText().trim();
		String tenSP = txtTenSanPham.getText().trim();
		String thuongHieu = txtThuongHieu.getText().trim();
		String chatLieu = txtChatLieu.getText().trim();
		String gia = txtDonGia.getText().trim();
		float donGia = 0;
		Pattern p = Pattern.compile("^\\\\d{1,}$");
		Matcher m = p.matcher(gia);
		boolean check = m.find();
		if (gia.isEmpty() || !check) {
			JOptionPane.showMessageDialog(this, "Đơn giá là số");
		} else {
			donGia = Float.valueOf(gia);
		}
		Loai loai;
		if (cboLoai.getSelectedItem().toString().trim().equalsIgnoreCase("Loại")) {
			loai = new Loai("L001", "Sách");
		} else {
			loai = new Loai("L002", "Thiết bị văn phòng");
			loai = new Loai("L002", "Dụng cụ học tập");
			loai = new Loai("L002", "SGK");
			loai = new Loai("L002", "Đồ trang trí");
		}
		NhaCungCap nhaCungCap = dao_NhaCungCap.getNhaCungCapTheoMa(txtNhaCungCap.getText().trim());
		String xuatXu = txtXuatXu.getText().trim();

		ImageIcon ico = new ImageIcon(hinhAnhSP);
		Image img = ico.getImage();

		String soLuong = txtSoLuong.getText().trim();
		int sl = 0;
		Matcher s = p.matcher(soLuong);
		boolean checkSL = s.find();
		if (soLuong.isEmpty() || !checkSL) {
			JOptionPane.showMessageDialog(this, "Số lượng là số");
		} else {
			sl = Integer.parseInt(soLuong);
		}

		String soTrang = txtSoTrang.getText().trim();
		int st = 0;
		Matcher t = p.matcher(soTrang);
		boolean checkST = t.find();
		if (soTrang.isEmpty() || !checkST) {
			JOptionPane.showMessageDialog(this, "Số trang là số");
		} else {
			st = Integer.parseInt(soTrang);
		}

		String kichThuoc = txtKichThuoc.getText().trim();
		Date ngayXuatBan = txtNgayXuatBan.getDate();
		TacGia tacGia = dao_TacGia.getTacGiaTheoMa(txtTacGia.getText().trim());
		NhaXuatBan nhaXuatBan = dao_NhaXuatBan.getNhaXuatBanTheoMa(txtNhaXuatBan.getText().trim());

		TheLoai theLoai;
		if (cboTheLoai.getSelectedItem().toString().trim().equalsIgnoreCase("Thể loại")) {
			theLoai = new TheLoai("TL001", "Trinh thám");
		} else {
			theLoai = new TheLoai("TL002", "SGK");
			theLoai = new TheLoai("TL003", "Văn học");
			theLoai = new TheLoai("TL004", "Viễn tưởng");
			theLoai = new TheLoai("TL005", "Khoa học");
			theLoai = new TheLoai("TL006", "Tiểu thuyết");
			theLoai = new TheLoai("TL007", "Truyện tranh");
			theLoai = new TheLoai("TL008", "Truyện chữ");
		}

		String loaiBia = cboLoaiBia.getSelectedItem().toString().trim();
		String donViTinh = txtDonViTinh.getText().trim();

		SanPham sp = new SanPham(maSP, tenSP, sl, donGia, donViTinh, img, st, kichThuoc, ngayXuatBan, loaiBia, xuatXu,
				thuongHieu, chatLieu, tacGia, nhaXuatBan, loai, theLoai, nhaCungCap);
		return sp;
	}

	public File chooserImage() {
		JFileChooser chooser = new JFileChooser();
		FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("Hinh anh", "jpg", "png");
		chooser.setFileFilter(extensionFilter);
		chooser.setMultiSelectionEnabled(false);
		int index = chooser.showDialog(this, "Chọn file");
		if (index == JFileChooser.APPROVE_OPTION) {
			File file = chooser.getSelectedFile();
			return file;
		}
		return null;
	}

	private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		if (updateSanPham()) {
			JOptionPane.showMessageDialog(this, "Cập nhật thành công");
		} else
			JOptionPane.showMessageDialog(this, "Cập nhật thất bại");
	}

	private boolean updateSanPham() {
		SanPham sp = revertSanPham();
		if (dao_SanPham.suaSanPham(sp)) {
			tblDSSanPhamModel.getDataVector().removeAllElements();
			loadDataToTable();
			return true;
		}
		return false;
	}

	private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		if (btnXoa.getText().equalsIgnoreCase("Xóa")) {
			int n = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa không", "Xóa", JOptionPane.YES_OPTION);
			if (n == JOptionPane.YES_OPTION) {
				if (xoaSanPham()) {
					JOptionPane.showMessageDialog(this, "Xóa thành công");
				} else
					JOptionPane.showMessageDialog(this, "Xóa thất bại");
			}
		} else {
			clearForm();
			btnCapNhat.setText("Chọn ảnh");
			btnThemSanPham.setText("Lưu sản phẩm");
			btnXoa.setText("Hủy");
		}
	}

	private boolean xoaSanPham() {
		// TODO Auto-generated method stub
		String ma = (String) tblDSSanPham.getModel().getValueAt(tblDSSanPham.getSelectedRow(), 0);
		if (dao_SanPham.xoaSanPham(ma)) {
			tblDSSanPhamModel.getDataVector().removeAllElements();
			loadDataToTable();
			return true;
		}
		return false;
	}

//	private void selectRowTable(MouseEvent e) throws ParseException {
//		int index = tblDSSanPham.getSelectedRow();
//		txtMaSanPham.setText(tblDSSanPham.getValueAt(index, 0).toString().trim());
//		txtTenSanPham.setText(tblDSSanPham.getValueAt(index, 1).toString().trim());
//		txtXuatXu.setText(tblDSSanPham.getValueAt(index, 2).toString());
//		txtChatLieu.setText(tblDSSanPham.getValueAt(index, 3).toString());
//		cboLoai.setSelectedItem(tblDSSanPham.getValueAt(index, 4).toString().trim());
//		txtThuongHieu.setText(tblDSSanPham.getValueAt(index, 5).toString());
//		txtNhaCungCap.setText(tblDSSanPham.getValueAt(index, 6).toString());
//		txtSoLuong.setText(tblDSSanPham.getValueAt(index, 7).toString().trim());
//		txtDonGia.setText(tblDSSanPham.getValueAt(index, 8).toString().trim());
//		cboLoaiBia.setSelectedItem(tblDSSanPham.getValueAt(index, 9).toString().trim());
//		cboTheLoai.setSelectedItem(tblDSSanPham.getValueAt(index, 10).toString().trim());
//		txtKichThuoc.setText(tblDSSanPham.getValueAt(index, 11).toString());
//		txtSoTrang.setText(tblDSSanPham.getValueAt(index, 12).toString());
//		Date ngayXB = new SimpleDateFormat("yyyy-MM-DD").parse(tblDSSanPham.getValueAt(index, 13).toString());
//		txtNgayXuatBan.setDate(ngayXB);
//		txtTacGia.setText(tblDSSanPham.getValueAt(index, 14).toString().trim());
//		SanPham sp = dao_SanPham.getSanPhamTheoMa(tblDSSanPham.getValueAt(index, 0).toString().trim());
//		Image img = ImageIOHelper.resize(sp.getHinhAnh(), lblHinhAnh.getWidth(), lblHinhAnh.getHeight());
//		try {
//			hinhAnhSP = ImageIOHelper.toByteArray(img, "png");
//		} catch (IOException e1) {
//			e1.printStackTrace();
//		}
//		lblHinhAnh.setIcon(new ImageIcon(img));
//	}

	private void selectRowTable(MouseEvent e) {
		int index = tblDSSanPham.getSelectedRow();
		txtMaSanPham.setText(tblDSSanPham.getValueAt(index, 0).toString().trim());
		txtTenSanPham.setText(tblDSSanPham.getValueAt(index, 1).toString().trim());
		txtXuatXu.setText(tblDSSanPham.getValueAt(index, 2).toString());
		txtChatLieu.setText(tblDSSanPham.getValueAt(index, 3).toString());
		cboLoai.setSelectedItem(tblDSSanPham.getValueAt(index, 4).toString().trim());
		txtThuongHieu.setText(tblDSSanPham.getValueAt(index, 5).toString());
		txtNhaCungCap.setText(tblDSSanPham.getValueAt(index, 6).toString());
		txtSoLuong.setText(tblDSSanPham.getValueAt(index, 7).toString().trim());
		txtDonGia.setText(tblDSSanPham.getValueAt(index, 8).toString().trim());
		SanPham sp = dao_SanPham.getSanPhamTheoMa(tblDSSanPham.getValueAt(index, 0).toString().trim());
		Image img = ImageIOHelper.resize(sp.getHinhAnh(), lblHinhAnh.getWidth(), lblHinhAnh.getHeight());
		try {
			hinhAnhSP = ImageIOHelper.toByteArray(img, "png");
		} catch (IOException e1) {
			e1.printStackTrace();
		}
		lblHinhAnh.setIcon(new ImageIcon(img));
	}

	private void loadLoaiSanPham() {
		ArrayList<Loai> dsLoai = dao_Loai.getAllLoai();
		for (Loai loai : dsLoai) {
			cboLoai.addItem(loai.getTenLoai().trim());
		}
	}

	private void loadTheLoaiSach() {
		ArrayList<TheLoai> dsTheLoai = dao_TheLoai.getAllTheLoai();
		for (TheLoai theLoai : dsTheLoai) {
			cboTheLoai.addItem(theLoai.getTenLoai().trim());
		}
	}

	// Variables declaration - do not modify
	private javax.swing.JButton btnCapNhat;
	private javax.swing.JButton btnThemSanPham;
	private javax.swing.JButton btnXoa;
	private javax.swing.JComboBox<String> cboLoai;

	private javax.swing.JComboBox<String> cboTheLoai;
	private javax.swing.JComboBox<String> cboSapXep;
	private javax.swing.JComboBox<String> cboLoaiBia;

	private javax.swing.JScrollPane jScrollPane1;

	private javax.swing.JLabel lblTheLoai;
	private javax.swing.JLabel lblSapXep;

	private javax.swing.JLabel lblSoTrang;
	private javax.swing.JLabel lblKichThuoc;
	private javax.swing.JLabel lblNgayXuatBan;
	private javax.swing.JLabel lblLoaiBia;
	private javax.swing.JLabel lblTacGia;
	private javax.swing.JLabel lblNhaXuatBan;

	private javax.swing.JLabel lblChatLieu;
	private javax.swing.JLabel lblDonGia;
	private javax.swing.JLabel lblLoai;
	private javax.swing.JLabel lblMaSanPham;
	private javax.swing.JLabel lblNhaCungCap;
	private javax.swing.JLabel lblSoLuong;
	private javax.swing.JLabel lblTenSanPham;
	private javax.swing.JLabel lblThuongHieu;
	private javax.swing.JLabel lblXuatXu;
	private javax.swing.JLabel lblHinhAnh;
	private javax.swing.JLabel lblDonViTinh;

	private javax.swing.JPanel pnAnh;
	private javax.swing.JPanel pnChucNang;
	private javax.swing.JPanel pnDSSanPham;
	private javax.swing.JPanel pnThongTinSanPham;
	private javax.swing.JTable tblDSSanPham;
	private DefaultTableModel tblDSSanPhamModel;

	private javax.swing.JTextField txtSoTrang;
	private javax.swing.JTextField txtKichThuoc;
	private com.toedter.calendar.JDateChooser txtNgayXuatBan;
	private javax.swing.JTextField txtTacGia;
	private javax.swing.JTextField txtNhaXuatBan;
	private javax.swing.JTextField txtDonViTinh;

	private javax.swing.JTextField txtChatLieu;
	private javax.swing.JTextField txtDonGia;
	private javax.swing.JTextField txtMaSanPham;
	private javax.swing.JTextField txtNhaCungCap;
	private javax.swing.JTextField txtSoLuong;
	private javax.swing.JTextField txtTenSanPham;
	private javax.swing.JTextField txtThuongHieu;
	private javax.swing.JTextField txtXuatXu;
}
